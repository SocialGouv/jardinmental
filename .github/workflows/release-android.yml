name: release-android

on:
  workflow_dispatch:
  push:
    branches: ['deployment/fastlane-github-actions']

concurrency:
  cancel-in-progress: true
  group: release-android 

# Needed secrets :
# DOTENV
# GOOGLE_CLOUD_API_KEY
# KEY_PROPERTIES
# KEYSTORE_B64

jobs:
  release-android:
    name: Build and release Android app
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v3
        with:
          node-version: "16.x"
          #cache: 'yarn'

      - name: Setup JDK 11
        uses: actions/setup-java@v2
        with:
          distribution: "zulu"
          java-version: 11
          
      - name: Setup Android SDK
        uses: android-actions/setup-android@v2

      - uses: actions/setup-ruby@v1
        with:
          ruby-version: "2.x"

      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Write .env
        shell: bash
        run: |
          echo "${{ secrets.DOTENV}}" > app/.env

      - name: Write Google Cloud API Key
        shell: bash
        run: |
          echo "${{ secrets.GOOGLE_CLOUD_API_KEY}}" > app/android/fastlane/google-cloud-api-key.json

      - name: Write key properties
        shell: bash
        run: |
          echo "${{ secrets.KEY_PROPERTIES}}" > app/android/key.properties

      - name: Write key store
        shell: bash
        run: |
          echo "${{ secrets.KEYSTORE_B64}}" | base64 --decode > app/android/app/my-upload-key.jks

      - name: Install Fastlane
        run: cd app/android && bundle install && cd ..

      - name: Install packages
        run: cd app && yarn install

      - name: Execute Fastlane command
        run: cd app && yarn publish:android
